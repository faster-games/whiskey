<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#+
    string CurrentOutputFolder = null;
    string PreGeneratedContent = @"
// <auto-generated>
// This code was generated by a tool. Any changes made manually will be lost
// the next time this code is regenerated.
// </auto-generated>
";
    string PostGeneratedContent = "";

    string GenerateTemplateArgs(int j)
    {
        var res = new List<string>();
        for (var i = 0; i <= j; i++)
        {
            res.Add("TArg" + i);
        }

        return string.Join(", ", res);
    }

    string[] Except(string[] src, string[] exclude)
    {
        List<string> ok = new List<string>();

        foreach (var s in src)
        {
            var skip = false;
            foreach (var e in exclude)
            {
                if (s.Equals(e, StringComparison.OrdinalIgnoreCase))
                {
                    skip = true;
                    break;
                }
            }

            if (!skip)
            {
                ok.Add(s);
            }
        }

        return ok.ToArray();
    }

    string GenerateParamArgs(int j)
    {
        var res = new List<string>();
        for (var i = 0; i <= j; i++)
        {
            res.Add("TArg" + i + " arg" + i);
        }

        return string.Join(", ", res);
    }

    string GenerateParamArgNames(int j)
    {
        var res = new List<string>();
        for (var i = 0; i <= j; i++)
        {
            res.Add(" arg" + i);
        }

        return string.Join(", ", res);
    }

    void SetOutputFolder(string newFolder)
    {
        CurrentOutputFolder = newFolder;
    }

    void SaveFile(string folder, string fileName, string content)
    {
        if (!Directory.Exists(folder))
        {
            Directory.CreateDirectory(folder);
        }

        using (FileStream fs = new FileStream(Path.Combine(folder, fileName.Trim() + ".cs"), FileMode.Create))
        {
            using (StreamWriter str = new StreamWriter(fs))
            {
                str.WriteLine(content);
                str.Flush();
            }
        }
    }

    void SaveGeneratedContent(string fileName, StringBuilder sb)
    {
        if (!Directory.Exists(CurrentOutputFolder))
        {
            Directory.CreateDirectory(CurrentOutputFolder);
        }
        var outDir = CurrentOutputFolder;
        if (!Directory.Exists(outDir))
        {
            Directory.CreateDirectory(outDir);
        }
        SaveFile(outDir, fileName, PreGeneratedContent + sb.ToString() + PostGeneratedContent);
        sb.Remove(0, sb.Length);
    }
#>